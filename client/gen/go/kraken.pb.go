// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: kraken.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum definitions
type ServiceTypeEnum int32

const (
	ServiceTypeEnum_UNKNOWN ServiceTypeEnum = 0
	ServiceTypeEnum_RELAY   ServiceTypeEnum = 1
)

// Enum value maps for ServiceTypeEnum.
var (
	ServiceTypeEnum_name = map[int32]string{
		0: "UNKNOWN",
		1: "RELAY",
	}
	ServiceTypeEnum_value = map[string]int32{
		"UNKNOWN": 0,
		"RELAY":   1,
	}
)

func (x ServiceTypeEnum) Enum() *ServiceTypeEnum {
	p := new(ServiceTypeEnum)
	*p = x
	return p
}

func (x ServiceTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_kraken_proto_enumTypes[0].Descriptor()
}

func (ServiceTypeEnum) Type() protoreflect.EnumType {
	return &file_kraken_proto_enumTypes[0]
}

func (x ServiceTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceTypeEnum.Descriptor instead.
func (ServiceTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{0}
}

// Request and response messages
type RegisterServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                    string          `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	HeartbeatDurationInSec uint32          `protobuf:"varint,2,opt,name=heartbeat_duration_in_sec,json=heartbeatDurationInSec,proto3" json:"heartbeat_duration_in_sec,omitempty"`
	Type                   ServiceTypeEnum `protobuf:"varint,3,opt,name=type,proto3,enum=kraken.ServiceTypeEnum" json:"type,omitempty"`
	Region                 string          `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *RegisterServiceRequest) Reset() {
	*x = RegisterServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceRequest) ProtoMessage() {}

func (x *RegisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceRequest.ProtoReflect.Descriptor instead.
func (*RegisterServiceRequest) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterServiceRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegisterServiceRequest) GetHeartbeatDurationInSec() uint32 {
	if x != nil {
		return x.HeartbeatDurationInSec
	}
	return 0
}

func (x *RegisterServiceRequest) GetType() ServiceTypeEnum {
	if x != nil {
		return x.Type
	}
	return ServiceTypeEnum_UNKNOWN
}

func (x *RegisterServiceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type RegisterServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Token   string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RegisterServiceResponse) Reset() {
	*x = RegisterServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceResponse) ProtoMessage() {}

func (x *RegisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceResponse.ProtoReflect.Descriptor instead.
func (*RegisterServiceResponse) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterServiceResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RegisterServiceResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{2}
}

type AddLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Stack   string `protobuf:"bytes,2,opt,name=stack,proto3" json:"stack,omitempty"`
}

func (x *AddLogRequest) Reset() {
	*x = AddLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogRequest) ProtoMessage() {}

func (x *AddLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogRequest.ProtoReflect.Descriptor instead.
func (*AddLogRequest) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{3}
}

func (x *AddLogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddLogRequest) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

type AddLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *AddLogResponse) Reset() {
	*x = AddLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogResponse) ProtoMessage() {}

func (x *AddLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogResponse.ProtoReflect.Descriptor instead.
func (*AddLogResponse) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{4}
}

func (x *AddLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddLogResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// Configuration messages
type GetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retention      *Retention `protobuf:"bytes,1,opt,name=retention,proto3" json:"retention,omitempty"`
	Fees           *Fees      `protobuf:"bytes,2,opt,name=fees,proto3" json:"fees,omitempty"`
	Name           string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description    string     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Pubkey         string     `protobuf:"bytes,5,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Contact        string     `protobuf:"bytes,6,opt,name=contact,proto3" json:"contact,omitempty"`
	Software       string     `protobuf:"bytes,7,opt,name=software,proto3" json:"software,omitempty"`
	SupportedNips  []int32    `protobuf:"varint,8,rep,packed,name=supported_nips,json=supportedNips,proto3" json:"supported_nips,omitempty"`
	Version        string     `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	RelayCountries []string   `protobuf:"bytes,10,rep,name=relay_countries,json=relayCountries,proto3" json:"relay_countries,omitempty"`
	LanguageTags   []string   `protobuf:"bytes,11,rep,name=language_tags,json=languageTags,proto3" json:"language_tags,omitempty"`
	Tags           []string   `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	PostingPolicy  string     `protobuf:"bytes,13,opt,name=posting_policy,json=postingPolicy,proto3" json:"posting_policy,omitempty"`
	PaymentsUrl    string     `protobuf:"bytes,14,opt,name=payments_url,json=paymentsUrl,proto3" json:"payments_url,omitempty"`
	Icon           string     `protobuf:"bytes,15,opt,name=icon,proto3" json:"icon,omitempty"`
	Url            string     `protobuf:"bytes,16,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{5}
}

func (x *GetConfigResponse) GetRetention() *Retention {
	if x != nil {
		return x.Retention
	}
	return nil
}

func (x *GetConfigResponse) GetFees() *Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *GetConfigResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetConfigResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetConfigResponse) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *GetConfigResponse) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *GetConfigResponse) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *GetConfigResponse) GetSupportedNips() []int32 {
	if x != nil {
		return x.SupportedNips
	}
	return nil
}

func (x *GetConfigResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetConfigResponse) GetRelayCountries() []string {
	if x != nil {
		return x.RelayCountries
	}
	return nil
}

func (x *GetConfigResponse) GetLanguageTags() []string {
	if x != nil {
		return x.LanguageTags
	}
	return nil
}

func (x *GetConfigResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetConfigResponse) GetPostingPolicy() string {
	if x != nil {
		return x.PostingPolicy
	}
	return ""
}

func (x *GetConfigResponse) GetPaymentsUrl() string {
	if x != nil {
		return x.PaymentsUrl
	}
	return ""
}

func (x *GetConfigResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetConfigResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Data structure messages
type Retention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int32   `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Count int32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Kinds []int32 `protobuf:"varint,3,rep,packed,name=kinds,proto3" json:"kinds,omitempty"`
}

func (x *Retention) Reset() {
	*x = Retention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Retention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Retention) ProtoMessage() {}

func (x *Retention) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Retention.ProtoReflect.Descriptor instead.
func (*Retention) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{6}
}

func (x *Retention) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Retention) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Retention) GetKinds() []int32 {
	if x != nil {
		return x.Kinds
	}
	return nil
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int32  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Period int32  `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{7}
}

func (x *Subscription) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Subscription) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Subscription) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

type Admission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int32  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *Admission) Reset() {
	*x = Admission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admission) ProtoMessage() {}

func (x *Admission) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admission.ProtoReflect.Descriptor instead.
func (*Admission) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{8}
}

func (x *Admission) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Admission) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type Publication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kinds  []int32 `protobuf:"varint,1,rep,packed,name=kinds,proto3" json:"kinds,omitempty"`
	Amount int32   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Unit   string  `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *Publication) Reset() {
	*x = Publication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publication) ProtoMessage() {}

func (x *Publication) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publication.ProtoReflect.Descriptor instead.
func (*Publication) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{9}
}

func (x *Publication) GetKinds() []int32 {
	if x != nil {
		return x.Kinds
	}
	return nil
}

func (x *Publication) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Publication) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription []*Subscription `protobuf:"bytes,1,rep,name=subscription,proto3" json:"subscription,omitempty"`
	Publication  []*Publication  `protobuf:"bytes,2,rep,name=publication,proto3" json:"publication,omitempty"`
	Admission    []*Admission    `protobuf:"bytes,3,rep,name=admission,proto3" json:"admission,omitempty"`
}

func (x *Fees) Reset() {
	*x = Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fees) ProtoMessage() {}

func (x *Fees) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fees.ProtoReflect.Descriptor instead.
func (*Fees) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{10}
}

func (x *Fees) GetSubscription() []*Subscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

func (x *Fees) GetPublication() []*Publication {
	if x != nil {
		return x.Publication
	}
	return nil
}

func (x *Fees) GetAdmission() []*Admission {
	if x != nil {
		return x.Admission
	}
	return nil
}

var File_kraken_proto protoreflect.FileDescriptor

var file_kraken_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b,
	0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x55, 0x0a, 0x0e, 0x61, 0x64,
	0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xfd, 0x03, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x72, 0x61,
	0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e,
	0x46, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x69, 0x70, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x4e, 0x69, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x4b, 0x0a, 0x09, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6e, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x22, 0x52,
	0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x22, 0x37, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x4f, 0x0a, 0x0b, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0xa8, 0x01, 0x0a,
	0x04, 0x46, 0x65, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x72,
	0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x35, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x72, 0x61, 0x6b,
	0x65, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x64,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x4c, 0x41, 0x59,
	0x10, 0x01, 0x32, 0x67, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65,
	0x6e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65,
	0x6e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x48, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x14, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65,
	0x6e, 0x2e, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x40, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x39, 0x0a, 0x06,
	0x61, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x15, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e,
	0x61, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x61, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x7a, 0x68, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kraken_proto_rawDescOnce sync.Once
	file_kraken_proto_rawDescData = file_kraken_proto_rawDesc
)

func file_kraken_proto_rawDescGZIP() []byte {
	file_kraken_proto_rawDescOnce.Do(func() {
		file_kraken_proto_rawDescData = protoimpl.X.CompressGZIP(file_kraken_proto_rawDescData)
	})
	return file_kraken_proto_rawDescData
}

var file_kraken_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kraken_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_kraken_proto_goTypes = []interface{}{
	(ServiceTypeEnum)(0),            // 0: kraken.ServiceTypeEnum
	(*RegisterServiceRequest)(nil),  // 1: kraken.registerServiceRequest
	(*RegisterServiceResponse)(nil), // 2: kraken.registerServiceResponse
	(*EmptyRequest)(nil),            // 3: kraken.EmptyRequest
	(*AddLogRequest)(nil),           // 4: kraken.addLogRequest
	(*AddLogResponse)(nil),          // 5: kraken.addLogResponse
	(*GetConfigResponse)(nil),       // 6: kraken.getConfigResponse
	(*Retention)(nil),               // 7: kraken.Retention
	(*Subscription)(nil),            // 8: kraken.Subscription
	(*Admission)(nil),               // 9: kraken.Admission
	(*Publication)(nil),             // 10: kraken.Publication
	(*Fees)(nil),                    // 11: kraken.Fees
}
var file_kraken_proto_depIdxs = []int32{
	0,  // 0: kraken.registerServiceRequest.type:type_name -> kraken.ServiceTypeEnum
	7,  // 1: kraken.getConfigResponse.retention:type_name -> kraken.Retention
	11, // 2: kraken.getConfigResponse.fees:type_name -> kraken.Fees
	8,  // 3: kraken.Fees.subscription:type_name -> kraken.Subscription
	10, // 4: kraken.Fees.publication:type_name -> kraken.Publication
	9,  // 5: kraken.Fees.admission:type_name -> kraken.Admission
	1,  // 6: kraken.ServiceRegistry.registerService:input_type -> kraken.registerServiceRequest
	3,  // 7: kraken.Config.getConfig:input_type -> kraken.EmptyRequest
	4,  // 8: kraken.Log.addLog:input_type -> kraken.addLogRequest
	2,  // 9: kraken.ServiceRegistry.registerService:output_type -> kraken.registerServiceResponse
	6,  // 10: kraken.Config.getConfig:output_type -> kraken.getConfigResponse
	5,  // 11: kraken.Log.addLog:output_type -> kraken.addLogResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_kraken_proto_init() }
func file_kraken_proto_init() {
	if File_kraken_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kraken_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Retention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Admission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kraken_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_kraken_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kraken_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_kraken_proto_goTypes,
		DependencyIndexes: file_kraken_proto_depIdxs,
		EnumInfos:         file_kraken_proto_enumTypes,
		MessageInfos:      file_kraken_proto_msgTypes,
	}.Build()
	File_kraken_proto = out.File
	file_kraken_proto_rawDesc = nil
	file_kraken_proto_goTypes = nil
	file_kraken_proto_depIdxs = nil
}
