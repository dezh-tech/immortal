// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: kraken.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Types of services that can be registered
type ServiceTypeEnum int32

const (
	ServiceTypeEnum_UNKNOWN ServiceTypeEnum = 0 // Unknown service type
	ServiceTypeEnum_RELAY   ServiceTypeEnum = 1 // Relay service type
)

// Enum value maps for ServiceTypeEnum.
var (
	ServiceTypeEnum_name = map[int32]string{
		0: "UNKNOWN",
		1: "RELAY",
	}
	ServiceTypeEnum_value = map[string]int32{
		"UNKNOWN": 0,
		"RELAY":   1,
	}
)

func (x ServiceTypeEnum) Enum() *ServiceTypeEnum {
	p := new(ServiceTypeEnum)
	*p = x
	return p
}

func (x ServiceTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_kraken_proto_enumTypes[0].Descriptor()
}

func (ServiceTypeEnum) Type() protoreflect.EnumType {
	return &file_kraken_proto_enumTypes[0]
}

func (x ServiceTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceTypeEnum.Descriptor instead.
func (ServiceTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{0}
}

// Request to register a service
type RegisterServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                    string          `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                                                          // Service URL
	HeartbeatDurationInSec uint32          `protobuf:"varint,2,opt,name=heartbeat_duration_in_sec,json=heartbeatDurationInSec,proto3" json:"heartbeat_duration_in_sec,omitempty"` // Heartbeat interval in seconds
	Type                   ServiceTypeEnum `protobuf:"varint,3,opt,name=type,proto3,enum=kraken.ServiceTypeEnum" json:"type,omitempty"`                                           // Type of the service (e.g., RELAY)
	Region                 string          `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`                                                                    // Region of the service
}

func (x *RegisterServiceRequest) Reset() {
	*x = RegisterServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceRequest) ProtoMessage() {}

func (x *RegisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceRequest.ProtoReflect.Descriptor instead.
func (*RegisterServiceRequest) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterServiceRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegisterServiceRequest) GetHeartbeatDurationInSec() uint32 {
	if x != nil {
		return x.HeartbeatDurationInSec
	}
	return 0
}

func (x *RegisterServiceRequest) GetType() ServiceTypeEnum {
	if x != nil {
		return x.Type
	}
	return ServiceTypeEnum_UNKNOWN
}

func (x *RegisterServiceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// Response after registering a service
type RegisterServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`      // Indicates if registration was successful
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"` // Optional message with additional information
	Token   string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`           // Token assigned to the registered service
}

func (x *RegisterServiceResponse) Reset() {
	*x = RegisterServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceResponse) ProtoMessage() {}

func (x *RegisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceResponse.ProtoReflect.Descriptor instead.
func (*RegisterServiceResponse) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterServiceResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RegisterServiceResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Empty request used for methods that do not require parameters
type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{2}
}

// Request to add a log entry
type AddLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Log message content
	Stack   string `protobuf:"bytes,2,opt,name=stack,proto3" json:"stack,omitempty"`     // Stack trace or additional log details
}

func (x *AddLogRequest) Reset() {
	*x = AddLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogRequest) ProtoMessage() {}

func (x *AddLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogRequest.ProtoReflect.Descriptor instead.
func (*AddLogRequest) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{3}
}

func (x *AddLogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddLogRequest) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

// Response after adding a log entry
type AddLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`      // Indicates if the log entry was successfully added
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"` // Optional message with additional information
}

func (x *AddLogResponse) Reset() {
	*x = AddLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogResponse) ProtoMessage() {}

func (x *AddLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogResponse.ProtoReflect.Descriptor instead.
func (*AddLogResponse) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{4}
}

func (x *AddLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddLogResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// Configuration limitations
type Limitations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxMessageLength    int32  `protobuf:"varint,1,opt,name=max_message_length,json=maxMessageLength,proto3" json:"max_message_length,omitempty"`             // Maximum allowed message length
	MaxSubscriptions    int32  `protobuf:"varint,2,opt,name=max_subscriptions,json=maxSubscriptions,proto3" json:"max_subscriptions,omitempty"`               // Maximum number of subscriptions allowed
	MaxFilters          int32  `protobuf:"varint,3,opt,name=max_filters,json=maxFilters,proto3" json:"max_filters,omitempty"`                                 // Maximum number of filters allowed
	MaxSubidLength      int32  `protobuf:"varint,4,opt,name=max_subid_length,json=maxSubidLength,proto3" json:"max_subid_length,omitempty"`                   // Maximum length of a subscription ID
	MinPowDifficulty    int32  `protobuf:"varint,5,opt,name=min_pow_difficulty,json=minPowDifficulty,proto3" json:"min_pow_difficulty,omitempty"`             // Minimum proof-of-work difficulty
	AuthRequired        bool   `protobuf:"varint,6,opt,name=auth_required,json=authRequired,proto3" json:"auth_required,omitempty"`                           // Indicates if authentication is required
	PaymentRequired     bool   `protobuf:"varint,7,opt,name=payment_required,json=paymentRequired,proto3" json:"payment_required,omitempty"`                  // Indicates if payment is required
	RestrictedWrites    bool   `protobuf:"varint,8,opt,name=restricted_writes,json=restrictedWrites,proto3" json:"restricted_writes,omitempty"`               // Indicates if writes are restricted
	MaxEventTags        int32  `protobuf:"varint,9,opt,name=max_event_tags,json=maxEventTags,proto3" json:"max_event_tags,omitempty"`                         // Maximum number of event tags allowed
	MaxContentLength    int32  `protobuf:"varint,10,opt,name=max_content_length,json=maxContentLength,proto3" json:"max_content_length,omitempty"`            // Maximum length of content allowed
	CreatedAtLowerLimit int64  `protobuf:"varint,11,opt,name=created_at_lower_limit,json=createdAtLowerLimit,proto3" json:"created_at_lower_limit,omitempty"` // Lower limit for creation timestamps
	CreatedAtUpperLimit int64  `protobuf:"varint,12,opt,name=created_at_upper_limit,json=createdAtUpperLimit,proto3" json:"created_at_upper_limit,omitempty"` // Upper limit for creation timestamps
	DefaultQueryLimit   uint32 `protobuf:"varint,13,opt,name=default_query_limit,json=defaultQueryLimit,proto3" json:"default_query_limit,omitempty"`         // Defualt of query limit
	MaxQueryLimit       uint32 `protobuf:"varint,14,opt,name=max_query_limit,json=maxQueryLimit,proto3" json:"max_query_limit,omitempty"`                     // Maximum of query limit
}

func (x *Limitations) Reset() {
	*x = Limitations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limitations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limitations) ProtoMessage() {}

func (x *Limitations) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limitations.ProtoReflect.Descriptor instead.
func (*Limitations) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{5}
}

func (x *Limitations) GetMaxMessageLength() int32 {
	if x != nil {
		return x.MaxMessageLength
	}
	return 0
}

func (x *Limitations) GetMaxSubscriptions() int32 {
	if x != nil {
		return x.MaxSubscriptions
	}
	return 0
}

func (x *Limitations) GetMaxFilters() int32 {
	if x != nil {
		return x.MaxFilters
	}
	return 0
}

func (x *Limitations) GetMaxSubidLength() int32 {
	if x != nil {
		return x.MaxSubidLength
	}
	return 0
}

func (x *Limitations) GetMinPowDifficulty() int32 {
	if x != nil {
		return x.MinPowDifficulty
	}
	return 0
}

func (x *Limitations) GetAuthRequired() bool {
	if x != nil {
		return x.AuthRequired
	}
	return false
}

func (x *Limitations) GetPaymentRequired() bool {
	if x != nil {
		return x.PaymentRequired
	}
	return false
}

func (x *Limitations) GetRestrictedWrites() bool {
	if x != nil {
		return x.RestrictedWrites
	}
	return false
}

func (x *Limitations) GetMaxEventTags() int32 {
	if x != nil {
		return x.MaxEventTags
	}
	return 0
}

func (x *Limitations) GetMaxContentLength() int32 {
	if x != nil {
		return x.MaxContentLength
	}
	return 0
}

func (x *Limitations) GetCreatedAtLowerLimit() int64 {
	if x != nil {
		return x.CreatedAtLowerLimit
	}
	return 0
}

func (x *Limitations) GetCreatedAtUpperLimit() int64 {
	if x != nil {
		return x.CreatedAtUpperLimit
	}
	return 0
}

func (x *Limitations) GetDefaultQueryLimit() uint32 {
	if x != nil {
		return x.DefaultQueryLimit
	}
	return 0
}

func (x *Limitations) GetMaxQueryLimit() uint32 {
	if x != nil {
		return x.MaxQueryLimit
	}
	return 0
}

// Response containing configuration details
type GetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limitations *Limitations `protobuf:"bytes,1,opt,name=limitations,proto3" json:"limitations,omitempty"` // Configuration limitations
	Url         string       `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                 // Service URL
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kraken_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kraken_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_kraken_proto_rawDescGZIP(), []int{6}
}

func (x *GetConfigResponse) GetLimitations() *Limitations {
	if x != nil {
		return x.Limitations
	}
	return nil
}

func (x *GetConfigResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_kraken_proto protoreflect.FileDescriptor

var file_kraken_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b,
	0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x55, 0x0a, 0x0e, 0x61, 0x64,
	0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xf4, 0x04, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d,
	0x61, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x2b, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x69, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x69,
	0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x77, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x77, 0x44, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x55, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5c, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x10,
	0x01, 0x32, 0x65, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x12, 0x52, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x46, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x3c, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x14, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x3e, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x4c, 0x6f,
	0x67, 0x12, 0x15, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65, 0x6e, 0x2e, 0x61, 0x64, 0x64, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6b, 0x72, 0x61, 0x6b, 0x65,
	0x6e, 0x2e, 0x61, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x7a, 0x68, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x69, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kraken_proto_rawDescOnce sync.Once
	file_kraken_proto_rawDescData = file_kraken_proto_rawDesc
)

func file_kraken_proto_rawDescGZIP() []byte {
	file_kraken_proto_rawDescOnce.Do(func() {
		file_kraken_proto_rawDescData = protoimpl.X.CompressGZIP(file_kraken_proto_rawDescData)
	})
	return file_kraken_proto_rawDescData
}

var file_kraken_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kraken_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kraken_proto_goTypes = []interface{}{
	(ServiceTypeEnum)(0),            // 0: kraken.ServiceTypeEnum
	(*RegisterServiceRequest)(nil),  // 1: kraken.registerServiceRequest
	(*RegisterServiceResponse)(nil), // 2: kraken.registerServiceResponse
	(*EmptyRequest)(nil),            // 3: kraken.EmptyRequest
	(*AddLogRequest)(nil),           // 4: kraken.addLogRequest
	(*AddLogResponse)(nil),          // 5: kraken.addLogResponse
	(*Limitations)(nil),             // 6: kraken.limitations
	(*GetConfigResponse)(nil),       // 7: kraken.getConfigResponse
}
var file_kraken_proto_depIdxs = []int32{
	0, // 0: kraken.registerServiceRequest.type:type_name -> kraken.ServiceTypeEnum
	6, // 1: kraken.getConfigResponse.limitations:type_name -> kraken.limitations
	1, // 2: kraken.ServiceRegistry.registerService:input_type -> kraken.registerServiceRequest
	3, // 3: kraken.Config.getConfig:input_type -> kraken.EmptyRequest
	4, // 4: kraken.Log.addLog:input_type -> kraken.addLogRequest
	2, // 5: kraken.ServiceRegistry.registerService:output_type -> kraken.registerServiceResponse
	7, // 6: kraken.Config.getConfig:output_type -> kraken.getConfigResponse
	5, // 7: kraken.Log.addLog:output_type -> kraken.addLogResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_kraken_proto_init() }
func file_kraken_proto_init() {
	if File_kraken_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kraken_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limitations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kraken_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kraken_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_kraken_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kraken_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_kraken_proto_goTypes,
		DependencyIndexes: file_kraken_proto_depIdxs,
		EnumInfos:         file_kraken_proto_enumTypes,
		MessageInfos:      file_kraken_proto_msgTypes,
	}.Build()
	File_kraken_proto = out.File
	file_kraken_proto_rawDesc = nil
	file_kraken_proto_goTypes = nil
	file_kraken_proto_depIdxs = nil
}
